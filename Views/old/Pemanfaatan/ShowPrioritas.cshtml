@model  Pnbp.Entities.PrioritasAlokasi
@{
    Layout = null;

    //var lsprioritas = new List<SelectListItem>();
    //lsprioritas.Add(new SelectListItem { Text = "1", Value = "1" });
    //lsprioritas.Add(new SelectListItem { Text = "2", Value = "2" });
    //lsprioritas.Add(new SelectListItem { Text = "3", Value = "3" });
    //lsprioritas.Add(new SelectListItem { Text = "4", Value = "4" });
    //lsprioritas.Add(new SelectListItem { Text = "5", Value = "5" });
    //lsprioritas.Add(new SelectListItem { Text = "6", Value = "6" });
    //lsprioritas.Add(new SelectListItem { Text = "7", Value = "7" });
    //lsprioritas.Add(new SelectListItem { Text = "8", Value = "8" });
    //lsprioritas.Add(new SelectListItem { Text = "9", Value = "9" });
    //lsprioritas.Add(new SelectListItem { Text = "10", Value = "10" });
    //lsprioritas.Add(new SelectListItem { Text = "11", Value = "11" });
    //lsprioritas.Add(new SelectListItem { Text = "12", Value = "12" });
    //lsprioritas.Add(new SelectListItem { Text = "13", Value = "13" });
    //lsprioritas.Add(new SelectListItem { Text = "14", Value = "14" });
    //lsprioritas.Add(new SelectListItem { Text = "15", Value = "15" });
    //lsprioritas.Add(new SelectListItem { Text = "16", Value = "16" });

    var lsstatus = new List<SelectListItem>();
    lsstatus.Add(new SelectListItem { Text = "Aktif", Value = "Aktif" });
    lsstatus.Add(new SelectListItem { Text = "Tidak Aktif", Value = "Tidak Aktif" });
}
<style type="text/css">
    .x_panel {
        border: none;
    }
    /* For Firefox */
    input[type='number'] {
        -moz-appearance: textfield;
    }
    /* Webkit browsers like Safari and Chrome */
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }
</style>

<script src='@Url.Content("~/resources/js/jquery.validate.min.js")' type="text/javascript"></script>
<script src='@Url.Content("~/resources/js/jquery.validate.unobtrusive.min.js")' type="text/javascript"></script>

@*<script src='@Url.Content("~/resources/js/moment.js")' type="text/javascript"></script>
<script src='@Url.Content("~/resources/js/id.js")' type="text/javascript"></script>
<script src='@Url.Content("~/resources/js/bootstrap-datetimepicker.min.js")' type="text/javascript"></script>*@

@*<script src='@Url.Content("~/resources/js/polyfiller.jspolyfiller.js")' type="text/javascript"></script>*@

@*<script src='@Url.Content("~/resources/js/polyfiller/polyfiller.js")' type="text/javascript"></script>*@

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header" style="text-align:left;">
            <button type="button" class="close" data-dismiss="modal" aria-hidden="true" id="btnclosemodal">×</button>
            @if (Model.Mode == "New")
            {
                <h2 class="modal-title" id="myModalLabel">Tambah Status Manfaat</h2>
            }
            else
            {
                <h2 class="modal-title" id="myModalLabel">Update Status Manfaat</h2>
            }
        </div>

        <div class="x_panel" style="border:0px;">
            <div class="x_content">
                <form class="form-horizontal form-label-left" method="post" id="frmubahprioritas">
                    @Html.HiddenFor(model => model.PrioritasOrigin, new { id = "txtOrigin" })
                    @Html.HiddenFor(model => model.Manfaatid, new { id = "txtManfaatid" })
                    @Html.HiddenFor(model => model.Mode)
                    @if (Model.Mode == "New")
                    {
                    }
                    else
                    {
                        <div class="form-group">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12">Kode Satker :</label>
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.TextBoxFor(model => model.Kodesatker, new { @class = "form-control", @id = "txtkdsatker", @readonly = "readonly" })
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Nama Satker :</label>
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @if (Model.Mode == "New")
                            {
                                @Html.DropDownListFor(m => m.KantorId, new SelectList(@Model.ListSatKer, "kantorid", "namasatker"), new { @class = "select2_single form-control input-md", @style = "width:100%", @id = "txtsatker" })
                                @Html.ValidationMessageFor(m => m.KantorId, "", new { @class = "error" })
                                //@Html.TextBoxFor(model => model.Namasatker, new { @class = "form-control", @id = "txtsatker" })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.Namasatker, new { @class = "form-control", @id = "txtsatker", @readonly = "readonly" })
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Program Satker :</label>
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @if (Model.Mode == "New")
                            {
                                @Html.DropDownListFor(m => m.ProgramId, new SelectList(@Model.ListProgram, "programid", "nama"), new { @class = "select2_single form-control input-md", @style = "width:100%", @id = "txtsatker" })
                                @Html.ValidationMessageFor(m => m.ProgramId, "", new { @class = "error" })
                                //@Html.TextBoxFor(model => model.Namasatker, new { @class = "form-control", @id = "txtsatker" })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.Namaprogram, new { @class = "form-control", @id = "txtsatker", @readonly = "readonly" })
                            }
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Nilai Anggaran :</label>
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.TextBoxFor(model => model.Anggaransatker, new { @class = "form-control", @id = "txtanggaran", @readonly = "readonly" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Nilai Alokasi :</label>
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @if (Model.Mode == "New")
                            {
                                @Html.TextBoxFor(model => model.Alokasisatker, new { @class = "form-control", @id = "txtalokasi" })
                            }
                            else
                            {
                                @Html.TextBoxFor(model => model.Alokasisatker, new { @class = "form-control", @id = "txtalokasi", @readonly = "readonly" })
                            }
                        </div>
                    </div>
                    @*<div class="form-group">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12">Prioritas :</label>
                            <div class="col-md-8 col-sm-8 col-xs-12">
                                @Html.DropDownListFor(model => model.Prioritaskegiatan, lsprioritas, new { @class = "select2_single form-control input-md", @style = "width:100%", @id = "cmbrioritaskegiatan" })
                            </div>
                        </div>*@
                    <div class="form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12">Status Aktif :</label>
                        <div class="col-md-8 col-sm-8 col-xs-12">
                            @Html.DropDownListFor(model => model.Statusaktif, lsstatus, new { @class = "select2_single form-control input-md", @style = "width:100%", @id = "cmbstatusaktif" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-5 col-sm-5 col-xs-12">Nilai Anggaran Januari :</label>
                        <div class="col-md-7 col-sm-7 col-xs-12">
                            @Html.TextBoxFor(model => model.NilaiAngJan, new { @class = "form-control", type = "number", @id = "nilaiangjan" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-5 col-sm-5 col-xs-12">Ranking Januari :</label>
                        <div class="col-md-7 col-sm-7 col-xs-12">
                            @Html.TextBoxFor(model => model.RankJan, new { @class = "form-control", type = "number", @id = "rankjan" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-5 col-sm-5 col-xs-12">Nilai Anggaran Februari :</label>
                        <div class="col-md-7 col-sm-7 col-xs-12">
                            @Html.TextBoxFor(model => model.NilaiAngFeb, new { @class = "form-control", type = "number", @id = "nilaiangfeb" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-5 col-sm-5 col-xs-12">Ranking Februari :</label>
                        <div class="col-md-7 col-sm-7 col-xs-12">
                            @Html.TextBoxFor(model => model.RankFeb, new { @class = "form-control", type = "number", @id = "rankfeb" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-5 col-sm-5 col-xs-12">Nilai Anggaran Maret :</label>
                        <div class="col-md-7 col-sm-7 col-xs-12">
                            @Html.TextBoxFor(model => model.NilaiAngMar, new { @class = "form-control", type = "number", @id = "nilaiangmar" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label class="control-label col-md-5 col-sm-5 col-xs-12">Ranking Maret :</label>
                        <div class="col-md-7 col-sm-7 col-xs-12">
                            @Html.TextBoxFor(model => model.RankMar, new { @class = "form-control", type = "number", @id = "rankmar" })
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" id="btnsimpanstatus" class="btn btn-success">Simpan</button>
            <button type="button" id="btncancelmodal" class="btn btn-warning">Cancel</button>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.select2_single').select2({ width: 'resolve' });
    });

    function closemodel() { $('#myModal').hide(); $('#myModalContent').html(''); };

    $("#btnclosemodal, #btncancelmodal").click(function (e) { closemodel(); });

    $('#btnsimpanstatus').click(function () {
        var pData = $('#frmubahprioritas').serialize();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("UpdatePrioritas", "Administrasi")',
            data: pData,
            success: function (data, textStatus, XMLHttpRequest) {
                if (!data.Status) {
                    $('#myModal').hide();
                    $.unblockUI();
                    showmsg('Error', 'Gagal Update - ' + data.Pesan);
                }
                else {
                    $('#right_col').html(data.Pesan);
                    closemodel();
                    $.unblockUI();
                }
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                console.log(errorThrown);
                $.unblockUI();
            }
        });
    });

    ////format masking input a
    //webshims.setOptions('forms-ext', {
    //    replaceUI: 'auto',
    //    types: 'number'
    //});
    //webshims.polyfill('forms forms-ext');
</script>